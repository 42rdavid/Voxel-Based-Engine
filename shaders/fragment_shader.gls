#version 410

uniform sampler2DArray			tex;
uniform float					renderVoxelRidges;
uniform vec3					color;

in vec2							frag_texture;
in float						frag_textureIndex;
in vec4							view_space;

out vec4						outputColor;

vec4 fog(int fogType, vec4 color)
{
	float			fogFactor;
	float			fogDensity = 0.02;
	vec4			fogColor = vec4(0.0, 0.0, 0.0, 1.0);
	float			dist = length(view_space);

	if (fogType == 0) // Linear fog
			fogFactor = 1.25 - dist * 0.0125; // (far - dist) / (far - near)
	else if (fogType == 1) // Exponential fog
		fogFactor = 1.0 / exp(dist * fogDensity);
	else if (fogType == 2) // Exponential squared fog
		fogFactor = 1.0 / (exp(pow(dist * fogDensity, 2)));
	fogFactor = clamp(fogFactor, 0.0, 1.0);
	return (mix(fogColor, color, fogFactor));
}

void main(void)
{
	vec4		c;
	int			fogType = 2;

	if (renderVoxelRidges > 0.5f)
		c = vec4(color, 1.0f);
	else
	{
		c = texture(tex, vec3(frag_texture.xy, frag_textureIndex));
		// c = fog(fogType, c);
	}
	outputColor = c;
}
